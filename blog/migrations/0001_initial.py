# Generated by Django 5.1.3 on 2024-11-29 04:52

import django.db.models.deletion
import markymark.fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('team', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.ImageField(blank=True, upload_to='blog/tags/icons/', verbose_name='Icône')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', markymark.fields.MarkdownField(blank=True, verbose_name='Description')),
                ('icon', models.ImageField(blank=True, upload_to='blog/categories/icons/', verbose_name='Icône')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='blog.category', verbose_name='Catégorie parente')),
            ],
            options={
                'verbose_name': 'Catégorie',
                'verbose_name_plural': 'Catégories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('excerpt', markymark.fields.MarkdownField(help_text="Bref résumé de l'article", verbose_name='Extrait')),
                ('content', markymark.fields.MarkdownField(verbose_name='Contenu')),
                ('featured_image', models.ImageField(blank=True, upload_to='blog/featured_images/', verbose_name='Image à la une')),
                ('banner_image', models.ImageField(blank=True, upload_to='blog/banner_images/', verbose_name='Image bannière')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('review', 'En révision'), ('scheduled', 'Programmé'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='Statut')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mis en avant')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Autoriser les commentaires')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Contenu premium')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Publié le')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='Programmé pour')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta description')),
                ('meta_keywords', models.CharField(blank=True, max_length=200, verbose_name='Meta mots-clés')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('read_time', models.PositiveIntegerField(default=0, help_text='Temps de lecture estimé en minutes', verbose_name='Temps de lecture')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='team.teammember', verbose_name='Auteur')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category', verbose_name='Catégorie')),
                ('co_authors', models.ManyToManyField(blank=True, related_name='co_authored_posts', to='team.teammember', verbose_name='Co-auteurs')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Mots-clés')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-published_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('content', markymark.fields.MarkdownField(verbose_name='Contenu')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('is_spam', models.BooleanField(default=False, verbose_name='Spam')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.CharField(blank=True, max_length=200, verbose_name='User Agent')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='team.teammember', verbose_name='Auteur')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='Commentaire parent')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='Article')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='blog/content_images/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Texte alternatif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='blog.post', verbose_name='Article')),
            ],
            options={
                'verbose_name': "Image d'article",
                'verbose_name_plural': "Images d'articles",
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adresse IP')),
                ('user_agent', models.CharField(blank=True, max_length=200, verbose_name='User Agent')),
                ('referrer', models.URLField(blank=True, verbose_name='Référent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de visite')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_views', to='blog.post', verbose_name='Article')),
            ],
            options={
                'verbose_name': "Vue d'article",
                'verbose_name_plural': "Vues d'articles",
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['-published_at', '-created_at'], name='blog_post_publish_aa1cab_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['status', 'published_at'], name='blog_post_status_5b2843_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postview',
            unique_together={('post', 'ip_address')},
        ),
    ]
