# Generated by Django 5.1.3 on 2024-11-29 04:51

import django.db.models.deletion
import markymark.fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('team', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('image', models.ImageField(upload_to='research/projects/gallery/', verbose_name='Image')),
                ('caption', models.TextField(blank=True, verbose_name='Légende')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
            ],
            options={
                'verbose_name': 'Image de projet',
                'verbose_name_plural': 'Images de projets',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Titre')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('planned', 'Planifié'), ('ongoing', 'En cours'), ('completed', 'Terminé'), ('suspended', 'Suspendu')], default='draft', max_length=20, verbose_name='Statut')),
                ('priority', models.IntegerField(choices=[(1, 'Basse'), (2, 'Moyenne'), (3, 'Haute'), (4, 'Critique')], default=2, verbose_name='Priorité')),
                ('funding_type', models.CharField(choices=[('internal', 'Financement interne'), ('external', 'Financement externe'), ('mixed', 'Financement mixte'), ('unfunded', 'Sans financement')], default='internal', max_length=20, verbose_name='Type de financement')),
                ('funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Montant du financement')),
                ('funding_details', markymark.fields.MarkdownField(blank=True, verbose_name='Détails du financement')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('summary', markymark.fields.MarkdownField(verbose_name='Résumé')),
                ('description', markymark.fields.MarkdownField(verbose_name='Description')),
                ('objectives', markymark.fields.MarkdownField(verbose_name='Objectifs')),
                ('methodology', markymark.fields.MarkdownField(blank=True, verbose_name='Méthodologie')),
                ('expected_results', markymark.fields.MarkdownField(blank=True, verbose_name='Résultats attendus')),
                ('current_progress', markymark.fields.MarkdownField(blank=True, verbose_name='Avancement actuel')),
                ('challenges', markymark.fields.MarkdownField(blank=True, verbose_name='Défis et obstacles')),
                ('image', models.ImageField(blank=True, upload_to='research/projects/', verbose_name='Image principale')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mis en avant')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_projects', to='team.teammember', verbose_name='Responsable')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Mots-clés')),
                ('team_members', models.ManyToManyField(related_name='projects', to='team.teammember', verbose_name="Membres de l'équipe")),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Collaboration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('logo', models.ImageField(upload_to='collaborations/logos/', verbose_name='Logo')),
                ('website', models.URLField(verbose_name='Site web')),
                ('institution_type', models.CharField(max_length=100, verbose_name="Type d'institution")),
                ('country', models.CharField(max_length=100, verbose_name='Pays')),
                ('description', markymark.fields.MarkdownField(verbose_name='Description')),
                ('summary', markymark.fields.MarkdownField(blank=True, verbose_name='Résumé')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('contact_name', models.CharField(blank=True, max_length=100, verbose_name='Nom du contact')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email du contact')),
                ('contact_phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone du contact')),
                ('mou', models.FileField(blank=True, help_text='Memorandum of Understanding', upload_to='collaborations/documents/', verbose_name="Protocole d'accord")),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Mots-clés')),
                ('projects', models.ManyToManyField(blank=True, related_name='collaborations', to='research.project', verbose_name='Projets')),
            ],
            options={
                'verbose_name': 'Collaboration',
                'verbose_name_plural': 'Collaborations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('document_type', models.CharField(choices=[('report', 'Rapport'), ('publication', 'Publication'), ('presentation', 'Présentation'), ('data', 'Données'), ('other', 'Autre')], max_length=20, verbose_name='Type')),
                ('file', models.FileField(upload_to='research/projects/documents/', verbose_name='Fichier')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='team.teammember', verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Document de projet',
                'verbose_name_plural': 'Documents de projets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='projects', to='research.projectdocument', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='project',
            name='gallery_images',
            field=models.ManyToManyField(blank=True, related_name='projects', to='research.projectimage', verbose_name="Galerie d'images"),
        ),
        migrations.CreateModel(
            name='ProjectUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', markymark.fields.MarkdownField(verbose_name='Contenu')),
                ('date', models.DateField(verbose_name='Date')),
                ('is_major', models.BooleanField(default=False, verbose_name='Mise à jour majeure')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='team.teammember', verbose_name='Créé par')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='research.project', verbose_name='Projet')),
            ],
            options={
                'verbose_name': 'Mise à jour de projet',
                'verbose_name_plural': 'Mises à jour de projets',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ResearchArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('short_description', models.CharField(max_length=200, verbose_name='Description courte')),
                ('description', markymark.fields.MarkdownField(verbose_name='Description complète')),
                ('icon', models.ImageField(blank=True, upload_to='research/icons/', verbose_name='Icône')),
                ('banner_image', models.ImageField(blank=True, upload_to='research/banners/', verbose_name='Image bannière')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Mots-clés')),
            ],
            options={
                'verbose_name': 'Domaine de recherche',
                'verbose_name_plural': 'Domaines de recherche',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='research_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='research.researcharea', verbose_name='Domaine de recherche'),
        ),
        migrations.CreateModel(
            name='ProjectView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Adresse IP')),
                ('user_agent', models.CharField(blank=True, max_length=200, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de visite')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_views', to='research.project')),
            ],
            options={
                'verbose_name': 'Vue de projet',
                'verbose_name_plural': 'Vues de projets',
                'unique_together': {('project', 'ip_address')},
            },
        ),
    ]
