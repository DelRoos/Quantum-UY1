# Generated by Django 5.1.3 on 2024-11-29 04:49

import django.db.models.deletion
import markymark.fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', markymark.fields.MarkdownField(verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Titre')),
                ('category', models.CharField(choices=[('academic', 'Académique'), ('research', 'Recherche'), ('administrative', 'Administratif'), ('technical', 'Technique'), ('student', 'Étudiant')], max_length=50, verbose_name='Catégorie')),
                ('level', models.PositiveIntegerField(default=0, verbose_name='Niveau hiérarchique')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.ImageField(blank=True, upload_to='team/specialties/', verbose_name='Icône')),
            ],
            options={
                'verbose_name': 'Spécialité',
                'verbose_name_plural': 'Spécialités',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=10, verbose_name='Titre')),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('photo', models.ImageField(blank=True, upload_to='team/photos/', verbose_name='Photo')),
                ('bio_short', markymark.fields.MarkdownField(help_text='Bref résumé (max 200 mots)', verbose_name='Biographie courte')),
                ('bio', markymark.fields.MarkdownField(blank=True, verbose_name='Biographie')),
                ('research_interests', markymark.fields.MarkdownField(blank=True, verbose_name='Intérêts de recherche')),
                ('expertise', markymark.fields.MarkdownField(blank=True, verbose_name='Expertise')),
                ('education', markymark.fields.MarkdownField(blank=True, verbose_name='Formation')),
                ('website', models.URLField(blank=True, verbose_name='Site web personnel')),
                ('google_scholar', models.URLField(blank=True, verbose_name='Google Scholar')),
                ('researchgate', models.URLField(blank=True, verbose_name='ResearchGate')),
                ('orcid', models.CharField(blank=True, max_length=20, verbose_name='ORCID')),
                ('linkedin', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, verbose_name='Twitter')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Mis en avant')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('joined_date', models.DateField(verbose_name="Date d'arrivée")),
                ('left_date', models.DateField(blank=True, null=True, verbose_name='Date de départ')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='team.department', verbose_name='Département')),
                ('position', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='team.position', verbose_name='Position')),
                ('specialties', models.ManyToManyField(blank=True, to='team.specialty', verbose_name='Spécialités')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Mots-clés')),
            ],
            options={
                'verbose_name': "Membre de l'équipe",
                'verbose_name_plural': "Membres de l'équipe",
                'ordering': ['order', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, verbose_name='Titre')),
                ('abstract', markymark.fields.MarkdownField(blank=True, verbose_name='Résumé')),
                ('journal', models.CharField(blank=True, max_length=200, verbose_name='Journal')),
                ('volume', models.CharField(blank=True, max_length=50, verbose_name='Volume')),
                ('issue', models.CharField(blank=True, max_length=50, verbose_name='Numéro')),
                ('pages', models.CharField(blank=True, max_length=50, verbose_name='Pages')),
                ('doi', models.CharField(blank=True, max_length=100, verbose_name='DOI')),
                ('publication_date', models.DateField(verbose_name='Date de publication')),
                ('publication_type', models.CharField(choices=[('article', 'Article de journal'), ('conference', 'Article de conférence'), ('book', 'Livre'), ('book_chapter', 'Chapitre de livre'), ('thesis', 'Thèse'), ('patent', 'Brevet'), ('preprint', 'Preprint')], max_length=20, verbose_name='Type de publication')),
                ('citation_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de citations')),
                ('pdf', models.FileField(blank=True, upload_to='publications/pdfs/', verbose_name='PDF')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('authors', models.ManyToManyField(related_name='publications', to='team.teammember', verbose_name='Auteurs')),
            ],
            options={
                'verbose_name': 'Publication',
                'verbose_name_plural': 'Publications',
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=200, verbose_name='Poste')),
                ('company', models.CharField(max_length=200, verbose_name='Organisation')),
                ('location', models.CharField(max_length=200, verbose_name='Lieu')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('description', markymark.fields.MarkdownField(blank=True, verbose_name='Description')),
                ('is_current', models.BooleanField(default=False, verbose_name='Poste actuel')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='team.teammember', verbose_name='Membre')),
            ],
            options={
                'verbose_name': 'Expérience',
                'verbose_name_plural': 'Expériences',
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(max_length=200, verbose_name='Diplôme')),
                ('institution', models.CharField(max_length=200, verbose_name='Institution')),
                ('field_of_study', models.CharField(max_length=200, verbose_name="Domaine d'étude")),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('description', markymark.fields.MarkdownField(blank=True, verbose_name='Description')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education_history', to='team.teammember', verbose_name='Membre')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='head',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_department', to='team.teammember', verbose_name='Responsable'),
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('description', markymark.fields.MarkdownField(verbose_name='Description')),
                ('awarding_body', models.CharField(max_length=200, verbose_name='Institution')),
                ('date_received', models.DateField(verbose_name='Date de réception')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='team.teammember', verbose_name='Récipiendaire')),
            ],
            options={
                'verbose_name': 'Prix',
                'verbose_name_plural': 'Prix',
                'ordering': ['-date_received'],
            },
        ),
    ]
